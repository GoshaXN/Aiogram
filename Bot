from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from pyqiwip2p import QiwiP2P
from pyqiwip2p.types import QiwiCustomer, QiwiDatetime

QIWI_PRIV_KEY = '='


bot = Bot(token=':')
dp = Dispatcher(bot)
p2p = QiwiP2P(auth_key=QIWI_PRIV_KEY)

@dp.message_handler(text = 'Заказ')
async def order(message):
    await bot.send_message(message.from_user.id,  'Заказ. выберите сколько гемов хотели бы купить (количество лямов числом) или нажмите один из вариантов сверху')



@dp.message_handler(text='Связь с владельцем')
async def user(message):
    await bot.send_message(message.from_user.id, 'Владелец: @Gosha7728 (ТГ), Gosha#7728 (ДС)')

def is_number(_str):
    try:
        int(_str)
        return True
    except ValueError:
        return False


@dp.message_handler(text='Заказ с выбором гемов')
async def gems_choose(message: types.Message):
    await bot.send_message(message.from_user.id, 'Напишите числом количество лямов, сколько хотели бы купить')
    if message.chat.type == 'private':
        if is_number(message.text):
            message_gems = int(message.text)
        else:
            await bot.send_message(message.from_user.id,'Введите целое число')

@dp.message_handler(commands=['start', 'help', 'order', 'order_choose'])#вывод текста при старте или хелпе через команды
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id, 'Привет! Это бот Гоши. Напиши <Заказ> если хотел бы перейти к заказу')#функция вывода текста при командах выше
#Обработка сообщени





if __name__ == '__main__':
    executor.start_polling(dp)#просто запуск бота(всего кода)


#квыбор гемов для покупки
